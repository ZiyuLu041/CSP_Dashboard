#!/usr/bin/env python3
"""
Quick script to inspect Parquet files generated by CSP pipeline
"""

import pandas as pd
import sys

def check_parquet(filename):
    """Load and display summary of Parquet file"""
    print(f"\n{'='*80}")
    print(f"Inspecting: {filename}")
    print(f"{'='*80}\n")

    # Read Parquet file
    df = pd.read_parquet(filename)

    # Basic info
    print(f"üìä Shape: {df.shape[0]:,} rows √ó {df.shape[1]} columns")
    print(f"üíæ Memory: {df.memory_usage(deep=True).sum() / 1024**2:.2f} MB")

    # Column info
    print(f"\nüìã Columns ({len(df.columns)}):")
    for col in df.columns:
        dtype = df[col].dtype
        non_null = df[col].count()
        print(f"  ‚Ä¢ {col:25s} {str(dtype):15s} {non_null:,} non-null")

    # Time range
    if 'csp_timestamp' in df.columns:
        print(f"\n‚è∞ Time Range:")
        print(f"  Start: {df['csp_timestamp'].min()}")
        print(f"  End:   {df['csp_timestamp'].max()}")
        duration = df['csp_timestamp'].max() - df['csp_timestamp'].min()
        print(f"  Duration: {duration}")
    elif 'trade_time' in df.columns:
        print(f"\n‚è∞ Time Range:")
        print(f"  Start: {df['trade_time'].min()}")
        print(f"  End:   {df['trade_time'].max()}")

    # Unique pairs (if applicable)
    if 'pair' in df.columns:
        unique_pairs = df['pair'].nunique()
        print(f"\nü™ô Unique Trading Pairs: {unique_pairs}")
        pair_counts = df['pair'].value_counts().head(10)
        print("\nTop 10 pairs by record count:")
        for pair, count in pair_counts.items():
            print(f"  {pair:15s} {count:,} records")

    # Numeric columns summary
    numeric_cols = df.select_dtypes(include=['float64', 'float32', 'int64', 'int32']).columns
    if len(numeric_cols) > 0:
        print(f"\nüìà Numeric Summary (first 5 columns):")
        print(df[numeric_cols[:5]].describe().round(4))

    # First few rows
    print(f"\nüìÑ First 3 rows:")
    print(df.head(3))

    # Last few rows
    print(f"\nüìÑ Last 3 rows:")
    print(df.tail(3))

    print(f"\n{'='*80}\n")

    return df

if __name__ == "__main__":
    if len(sys.argv) > 1:
        filename = sys.argv[1]
    else:
        # Default file
        filename = "parquet_data/crypto_statistics_20250930_185642.parquet"

    try:
        df = check_parquet(filename)

        # Optional: Interactive mode
        print("üí° Loaded DataFrame available as 'df' variable")
        print("   Run: df.info(), df.describe(), df.head(), etc.")

    except FileNotFoundError:
        print(f"‚ùå File not found: {filename}")
        print("\nUsage: python check_parquet.py <filename.parquet>")
        print(f"Or edit the script to change default file")
    except Exception as e:
        print(f"‚ùå Error reading Parquet file: {e}")
        import traceback
        traceback.print_exc()
